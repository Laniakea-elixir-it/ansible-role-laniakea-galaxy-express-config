--- 
#check if conda exist in export to do not extract the file 
#testing phase task

#______________________________________
### Add CVMFS for tools

- name: Download tools.elixir-italy-cvmfs config file
  become: true
  become_user: root
  get_url:
    url: 'https://raw.githubusercontent.com/Laniakea-elixir-it/tools-laniakea-cvmfs/main/{{ item.conf_file }}/{{ restore_cvmfs_repository}}.{{ item.ext }}'
    dest: '/etc/cvmfs/{{ item.dest_dir }}/{{ restore_cvmfs_repository}}.{{ item.ext }}'
    mode: '444'
  with_items:
    - { conf_file: cvmfs_server_config_files , dest_dir: config.d , ext: conf}
    - { conf_file: cvmfs_server_keys , dest_dir: keys , ext: pub }

- name: probe tools.elixir-italy-cvmfs
  shell:
    cmd: 'cvmfs_config probe {{ restore_cvmfs_repository }}'

#______________________________________
### Restore flavor

- name: check flavor file existence 
  stat: 
    path: "/tmp/{{ galaxy_flavor }}"
  register: flavor

- name: install ephemeris for workflow installation
  pip:
    name: ephemeris
    virtualenv: '{{ laniakea_galaxy_venv_dir }}'

- name: upload the python script for database restore 
  become: true
  template:
    src: express-cvmfs-restore.py.j2
    dest: /tmp/express-cvmfs-restore.py
    owner: root
    group: root
    mode: u=rwx,g=rw,o=r
  when: not flavor.stat.exists

#- name: create/check destinations
#  file:
#    path: "{{ item }}"
#    state: directory
#    mode: '0755'  
#  with_items:
#    - "{{ tool_deps_path }}"
#    - "{{ shed_tool_destination }}"

- name: "Recover right (image, galaxy release) couple"
  set_fact:
    image: "{{ galaxy_version.split(',').0 }}"
    galaxy_version: "{{ galaxy_version.split(',').1 }}"

- name: run python script to restore flavor
  become: true
  command: /tmp/express-cvmfs-restore.py -i {{ image }} -f {{ galaxy_flavor }} -v {{ galaxy_flavor_version }} -g {{ galaxy_version }}
  when: not flavor.stat.exists
  register: restore_script

- name: check if dir workflows exists
  stat: 
    path: "/cvmfs/{{ restore_cvmfs_repository }}/dump/{{ image }}_{{ galaxy_version }}_{{ galaxy_flavor }}_{{ galaxy_flavor_version }}/workflows"
  register: workflows

- name: install workflows  
  become: true
  become_user: galaxy
  shell: '. {{ laniakea_galaxy_venv_dir }}/bin/activate && workflow-install \
  -w {{ workflows.stat.path }} \ 
  -a {{ GALAXY_ADMIN_API_KEY }} -g http://localhost:80'
  when: workflows.stat.exists
  tags:
    - workflows
